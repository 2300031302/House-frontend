import React, { useState } from 'react';
import { Users, Wrench, Calendar, DollarSign, TrendingUp, Eye } from 'lucide-react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, LineChart, Line } from 'recharts';
import { useApp } from '../../context/AppContext.jsx';

export default function AdminDashboard() {
  const { state } = useApp();
  const [activeTab, setActiveTab] = useState('overview');

  const totalUsers = state.users.length;
  const totalProfessionals = state.professionals.length;
  const totalBookings = state.bookings.length;
  const totalRevenue = state.bookings.filter(b => b.status === 'completed').reduce((sum, booking) => sum + booking.price, 0);

  const bookingsByStatus = [
    { name: 'Completed', value: state.bookings.filter(b => b.status === 'completed').length, color: '#10B981' },
    { name: 'Pending', value: state.bookings.filter(b => b.status === 'pending').length, color: '#F59E0B' },
    { name: 'Confirmed', value: state.bookings.filter(b => b.status === 'confirmed').length, color: '#3B82F6' },
    { name: 'Cancelled', value: state.bookings.filter(b => b.status === 'cancelled').length, color: '#EF4444' },
  ];

  const servicePopularity = state.services.map(service => ({ name: service.name, bookings: state.bookings.filter(b => b.serviceId === service.id).length })).sort((a,b)=>b.bookings-a.bookings);

  const monthlyRevenue = [{ month: 'Jan', revenue: 12400 },{ month: 'Feb', revenue: 15600 },{ month: 'Mar', revenue: 18200 },{ month: 'Apr', revenue: 22100 },{ month: 'May', revenue: 19800 },{ month: 'Jun', revenue: 25400 }];

  const tabs = [{ id: 'overview', name: 'Overview', icon: TrendingUp },{ id: 'users', name: 'Users', icon: Users },{ id: 'professionals', name: 'Professionals', icon: Wrench },{ id: 'bookings', name: 'Bookings', icon: Calendar }];

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-white to-indigo-50 pt-16"><div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12"><div className="mb-8"><h1 className="text-3xl font-bold text-gray-900 mb-2">Admin Dashboard</h1><p className="text-gray-600">Manage your HomeServices platform</p></div><div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">{[{label:'Total Users',value:totalUsers,icon:Users,cls:'blue'},{label:'Professionals',value:totalProfessionals,icon:Wrench,cls:'green'},{label:'Total Bookings',value:totalBookings,icon:Calendar,cls:'purple'},{label:'Total Revenue',value:`$${totalRevenue}`,icon:DollarSign,cls:'orange'}].map((card,i)=>(<div key={i} className="bg-white/60 backdrop-blur-sm border border-white/20 rounded-2xl p-6"><div className="flex items-center justify-between"><div><p className="text-sm text-gray-600">{card.label}</p><p className="text-2xl font-bold text-blue-600">{card.value}</p></div><div className="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center"><card.icon className="h-6 w-6 text-blue-600" /></div></div></div>))}</div>

      <div className="mb-8"><div className="flex space-x-1 bg-white/60 backdrop-blur-sm border border-white/20 rounded-xl p-1">{tabs.map(tab => { const Icon = tab.icon; return (<button key={tab.id} onClick={() => setActiveTab(tab.id)} className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-all ${activeTab === tab.id ? 'bg-gradient-to-r from-purple-500 to-indigo-600 text-white shadow-lg' : 'text-gray-600 hover:text-gray-800 hover:bg-white/50'}`}><Icon className="h-4 w-4" /><span className="text-sm font-medium">{tab.name}</span></button>); })}</div></div>

      {activeTab === 'overview' && (<div className="grid grid-cols-1 lg:grid-cols-2 gap-8"><div className="bg-white/60 backdrop-blur-sm border border-white/20 rounded-2xl p-6"><h3 className="text-lg font-semibold text-gray-900 mb-6">Monthly Revenue</h3><ResponsiveContainer width="100%" height={300}><LineChart data={monthlyRevenue}><CartesianGrid strokeDasharray="3 3" stroke="#e5e7eb" /><XAxis dataKey="month" stroke="#6b7280" /><YAxis stroke="#6b7280" /><Tooltip contentStyle={{ backgroundColor: 'rgba(255,255,255,0.95)', border: 'none', borderRadius: '8px', boxShadow: '0 4px 6px -1px rgba(0,0,0,0.1)' }} /><Line type="monotone" dataKey="revenue" stroke="#8b5cf6" strokeWidth={3} dot={{ fill: '#8b5cf6', strokeWidth: 2, r: 4 }} /></LineChart></ResponsiveContainer></div><div className="bg-white/60 backdrop-blur-sm border border-white/20 rounded-2xl p-6"><h3 className="text-lg font-semibold text-gray-900 mb-6">Booking Status Distribution</h3><ResponsiveContainer width="100%" height={300}><PieChart><Pie data={bookingsByStatus} cx="50%" cy="50%" outerRadius={100} dataKey="value" label={({name,value})=>`${name}: ${value}`} >{bookingsByStatus.map((entry,index)=>(<Cell key={`cell-${index}`} fill={entry.color} />))}</Pie><Tooltip /></PieChart></ResponsiveContainer></div><div className="bg-white/60 backdrop-blur-sm border border-white/20 rounded-2xl p-6 lg:col-span-2"><h3 className="text-lg font-semibold text-gray-900 mb-6">Service Popularity</h3><ResponsiveContainer width="100%" height={300}><BarChart data={servicePopularity}><CartesianGrid strokeDasharray="3 3" stroke="#e5e7eb" /><XAxis dataKey="name" stroke="#6b7280" /><YAxis stroke="#6b7280" /><Tooltip contentStyle={{ backgroundColor: 'rgba(255,255,255,0.95)', border: 'none', borderRadius: '8px', boxShadow: '0 4px 6px -1px rgba(0,0,0,0.1)' }} /><Bar dataKey="bookings" fill="#3b82f6" radius={[4,4,0,0]} /></BarChart></ResponsiveContainer></div></div>)}

      {activeTab === 'users' && (<div className="bg-white/60 backdrop-blur-sm border border-white/20 rounded-2xl overflow-hidden"><div className="p-6 border-b border-gray-200/50"><h3 className="text-xl font-semibold text-gray-900">User Management</h3></div><div className="overflow-x-auto"><table className="w-full"><thead className="bg-gray-50/50"><tr><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Member Since</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Bookings</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th></tr></thead><tbody className="divide-y divide-gray-200/50">{state.users.map(user => { const userBookings = state.bookings.filter(b=>b.userId===user.id); return (<tr key={user.id} className="hover:bg-gray-50/50"><td className="px-6 py-4 whitespace-nowrap"><div className="flex items-center"><img className="h-10 w-10 rounded-full object-cover" src={user.image} alt={user.name} /><div className="ml-4"><div className="text-sm font-medium text-gray-900">{user.name}</div></div></div></td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{user.email}</td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{user.memberSince ? new Date(user.memberSince).toLocaleDateString() : 'N/A'}</td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{userBookings.length}</td><td className="px-6 py-4 whitespace-nowrap text-sm font-medium"><button className="text-indigo-600 hover:text-indigo-900 mr-3"><Eye className="h-4 w-4" /></button></td></tr>); })}</tbody></table></div></div>)}

      {activeTab === 'professionals' && (<div className="bg-white/60 backdrop-blur-sm border border-white/20 rounded-2xl overflow-hidden"><div className="p-6 border-b border-gray-200/50"><h3 className="text-xl font-semibold text-gray-900">Professional Management</h3></div><div className="overflow-x-auto"><table className="w-full"><thead className="bg-gray-50/50"><tr><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Professional</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Specialty</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rating</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Bookings</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Earnings</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th></tr></thead><tbody className="divide-y divide-gray-200/50">{state.professionals.map(professional => { const professionalBookings = state.bookings.filter(b=>b.professionalId===professional.id); const earnings = professionalBookings.filter(b=>b.status==='completed').reduce((sum,booking)=>sum+booking.price,0); return (<tr key={professional.id} className="hover:bg-gray-50/50"><td className="px-6 py-4 whitespace-nowrap"><div className="flex items-center"><img className="h-10 w-10 rounded-full object-cover" src={professional.image} alt={professional.name} /><div className="ml-4"><div className="text-sm font-medium text-gray-900">{professional.name}</div><div className="text-sm text-gray-500">{professional.experience}</div></div></div></td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{professional.specialty}</td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><div className="flex items-center"><span className="text-yellow-400">â˜…</span><span className="ml-1">{professional.rating} ({professional.reviewCount})</span></div></td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{professionalBookings.length}</td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${earnings}</td><td className="px-6 py-4 whitespace-nowrap text-sm font-medium"><button className="text-indigo-600 hover:text-indigo-900 mr-3"><Eye className="h-4 w-4" /></button></td></tr>); })}</tbody></table></div></div>)}

      {activeTab === 'bookings' && (<div className="bg-white/60 backdrop-blur-sm border border-white/20 rounded-2xl overflow-hidden"><div className="p-6 border-b border-gray-200/50"><h3 className="text-xl font-semibold text-gray-900">Booking Management</h3></div><div className="overflow-x-auto"><table className="w-full"><thead className="bg-gray-50/50"><tr><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Service</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Customer</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Professional</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th><th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th></tr></thead><tbody className="divide-y divide-gray-200/50">{state.bookings.map(booking => { const service = state.services.find(s=>s.id===booking.serviceId); const user = state.users.find(u=>u.id===booking.userId); const professional = state.professionals.find(p=>p.id===booking.professionalId); const getStatusIcon = (status) => { switch(status){ case 'completed': return <CheckCircle className="h-4 w-4 text-green-500"/>; case 'cancelled': return <X className="h-4 w-4 text-red-500"/>; default: return <AlertCircle className="h-4 w-4 text-yellow-500"/>; } }; const getStatusColor = (status) => { switch(status){ case 'completed': return 'bg-green-100 text-green-800'; case 'cancelled': return 'bg-red-100 text-red-800'; case 'confirmed': return 'bg-blue-100 text-blue-800'; default: return 'bg-yellow-100 text-yellow-800'; } }; return (<tr key={booking.id} className="hover:bg-gray-50/50"><td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{service?.name}</td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{user?.name}</td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{professional?.name}</td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{new Date(booking.date).toLocaleDateString()}</td><td className="px-6 py-4 whitespace-nowrap"><span className={`inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(booking.status)}`}>{getStatusIcon(booking.status)}{booking.status.charAt(0).toUpperCase() + booking.status.slice(1)}</span></td><td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${booking.price}</td></tr>); })}</tbody></table></div></div>)}

    </div></div>
  );
}
